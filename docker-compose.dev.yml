version: '3.8'

services:
  # PostgreSQL 数据库
  postgres:
    image: swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/postgres:15-alpine
    container_name: hmf_ehr_postgres_dev
    environment:
      POSTGRES_DB: hmf_ehr_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./backend/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - hmf_ehr_dev_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d hmf_ehr_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis 缓存
  redis:
    image: swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/redis:7-alpine
    container_name: hmf_ehr_redis_dev
    ports:
      - "6380:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - hmf_ehr_dev_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 后端开发服务
  backend-dev:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: hmf_ehr_backend_dev
    environment:
      NODE_ENV: development
      PORT: 8080
      API_PREFIX: api/v1
      
      # 数据库配置
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_DATABASE: hmf_ehr_dev
      DB_SYNCHRONIZE: true
      DB_LOGGING: true
      
      # Redis配置
      REDIS_HOST: redis
      REDIS_PORT: 6379
      
      # JWT配置
      JWT_SECRET: hmf-ehr-dev-secret-key
      JWT_EXPIRES_IN: 24h
      
      # 开发配置
      CORS_ORIGIN: http://localhost:3000
      LOG_LEVEL: debug
    ports:
      - "8081:8080"
      - "9230:9229" # 调试端口
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./logs/backend:/app/logs
      - ./uploads:/app/uploads
    networks:
      - hmf_ehr_dev_network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    command: npm run start:debug

  # 前端开发服务
  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: hmf_ehr_frontend_dev
    environment:
      VITE_APP_TITLE: "HMF EHR 人力资源管理系统"
      VITE_APP_VERSION: "1.0.0"
      VITE_APP_DESCRIPTION: "县城烘焙连锁店HR数字化人力资源管理系统"
      VITE_API_BASE_URL: http://localhost:8081
      VITE_API_PREFIX: /api/v1
      VITE_ENABLE_DEVTOOLS: "true"
    ports:
      - "3001:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - hmf_ehr_dev_network
    depends_on:
      - backend-dev
    restart: unless-stopped
    command: npm run dev

  # 开发环境 Nginx (可选)
  nginx-dev:
    image: swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/nginx:alpine3.22-slim
    container_name: hmf_ehr_nginx_dev
    ports:
      - "8090:80"
    volumes:
      - ./nginx/nginx.dev.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d/dev.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - hmf_ehr_dev_network
    depends_on:
      - frontend-dev
      - backend-dev
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  hmf_ehr_dev_network:
    driver: bridge
